# configs/params.yaml
# Configuration file for genovo_traderv2 - Updated with Broker Section

# --- General Settings ---
mode: 'simulation' # Set to 'simulation' for training runs, 'live' for trading
symbols: # Symbols used for trading/simulation
  - 'EURUSDm'
  - 'GBPUSDm'
  - 'USDJPYm'
  - 'AUDUSDm'
  - 'USDCADm'
results_dir: 'results/'

# --- MT5 Connection Configuration ---
mt5_config:
  login: 209571100
  password: "Abioye@16" # IMPORTANT: Use environment variables or a secure secrets manager in production!
  server: "Exness-MT5Trial9"
  path: "C:\\Program Files\\MetaTrader 5\\terminal64.exe" # Path to MT5 terminal executable (double backslashes for Windows)

# --- Broker Configuration ---
# Consolidated section for MetaTrader 5 connection and interface settings
broker:
  # --- Connection details ---
  account_id: 209571100
  password: "Abioye@16" # IMPORTANT: Use environment variables or a secure secrets manager in production!
  server: "Exness-MT5Trial9"
  mt5_path: "C:\\Program Files\\MetaTrader 5\\terminal64.exe" # Path to MT5 terminal executable (double backslashes for Windows)

  # --- Interface/Order settings ---
  default_slippage: 3 # Default slippage for orders
  order_retries: 3 # Number of times to retry sending a failed order (for retryable errors)
  retry_delay: 1.5 # Delay in seconds between order retries
  magic_number: 23456 # Magic number for identifying trades placed by this bot

  # --- NEW: Currency Conversion Symbol Mapping ---
  # Maps standard currency pairs (FROM_TO) to the exact symbol name
  # your broker provides for fetching the conversion rate tick.
  # Verify these symbols in your MT5 Market Watch!
  conversion_symbols:
    # Assuming account currency is USD and rate symbols also use 'm' suffix
    "EURUSD": "EURUSDm" # Symbol for EUR -> USD rate
    "GBPUSD": "GBPUSDm" # Symbol for GBP -> USD rate
    "USDJPY": "USDJPYm" # Symbol for USD -> JPY rate
    "AUDUSD": "AUDUSDm" # Symbol for AUD -> USD rate
    "USDCAD": "USDCADm" # Symbol for USD -> CAD rate
    # Add other pairs if needed, e.g., if account currency was EUR:
    # "USDJPY": "USDJPYm" # Still need USD->JPY
    # "EURUSD": "EURUSDm" # Need EUR->USD (though rate is 1 if account is EUR)
    # "EURGBP": "EURGBPm" # Need EUR->GBP rate (assuming symbol exists)
    # "EURJPY": "EURJPYm" # Need EUR->JPY rate (assuming symbol exists)

  # --- Fallback Symbol Info (Optional) ---
  # Use this if mt5.symbol_info() fails for a specific symbol
  # Provide necessary attributes used in calculations (like _calculate_lots)
  symbol_info_fallback:
    # Example (Uncomment and adjust if needed for a symbol):
    # "UNCOMMON_SYMBOLm":
    #   currency_base: "UNC"
    #   currency_profit: "USD"
    #   trade_contract_size: 10000.0
    #   point: 0.001
    #   digits: 3
    #   volume_step: 0.1
    #   volume_min: 0.1
    #   volume_max: 50.0
    pass # No fallbacks defined by default

# --- API Keys (api_keys) ---
# Kept for completeness, ensure keys are managed securely
api_keys:
  fred_api_key: "e225fb27a4fcba9f278f7623e30fbb46"
  newsapi_key: "ad32ddeb84e14ac89bb7dd13f87e0693"

# --- Notification Settings (notifications) ---
# Used for sending updates/errors
notifications:
  email_enabled: true
  email_address: "tafolabi009@gmail.com"
  email_password: "jhbv znwi xxop yzyl" # IMPORTANT: Use environment variables or app passwords!
  email_smtp_server: "smtp.gmail.com"
  email_smtp_port: 587
  email_recipient: "tabioye009@gmail.com,tafolabi009@gmail.com,ifeoluwaadegbite15@gmail.com"

# --- Data Configuration (data_config) ---
data_config:
  source: 'mt5'
  timeframe: 'M1'
  num_bars: 100000  # Increased from 50000 for better historical context
  validation_split: 0.2
  test_split: 0.1

# --- Feature Engineering Configuration (feature_config) ---
feature_config:
  window_sizes: [5, 10, 20, 50, 100, 200, 500]
  volatility_windows: [20, 50, 100, 200]
  momentum_windows: [14, 28, 56, 112]
  trend_windows: [9, 26, 52, 104]
  volume_windows: [20, 50, 100, 200]
  regime_windows: [20, 50, 100, 200]
  use_ta_lib: true
  use_wavelets: true  # Wavelet decomposition
  use_kalman: true   # Kalman filtering
  feature_selection:
    method: 'mutual_info'  # Mutual information-based selection
    top_k: 512  # Keep top 512 features
  normalization:
    type: 'robust_quantile'  # Better than standard scaling
    quantile_range: [0.001, 0.999]

# --- Model Configuration (model_config) ---
model_config:
  load_path_base: 'results/'
  save_path_base: 'results/'
  num_features: 512  # Increased for richer feature representation
  seq_length: 201
  hidden_size: 768   # Increased from 512
  num_layers: 8      # Increased from 6
  num_heads: 32      # Increased from 16
  dropout: 0.1       # Reduced dropout for better memorization
  sparsity: 0.95     # Increased sparsity for better focus
  quantiles: [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99]  # More granular distribution modeling
  kernel_sizes: [3, 7, 15, 31, 63]  # Extended multi-scale pattern detection
  learning_rate: 0.0001
  weight_decay: 0.01
  gradient_clip: 1.0
  use_amp: true     # Automatic mixed precision
  ema_decay: 0.999  # Exponential moving average of weights
  use_regime_detection: true
  use_neural_flow: true
  use_hierarchical_attention: true

# --- Training Configuration (training_config) ---
training_config:
  batch_size: 128
  accumulation_steps: 4  # Effective batch size of 512
  num_epochs: 200
  early_stopping_patience: 20
  learning_rate_scheduler:
    type: 'one_cycle'  # Better than cosine for HFT
    max_lr: 0.001
    pct_start: 0.3
    div_factor: 25.0
    final_div_factor: 1000.0
  warmup_steps: 2000
  mixed_precision: true
  gradient_checkpointing: true  # Memory efficiency
  loss_config:
    value_loss_weight: 1.0
    policy_loss_weight: 1.0
    entropy_weight: 0.01
    quantile_loss_weight: 1.0
    regime_loss_weight: 0.5
    uncertainty_loss_weight: 0.5

# --- Strategy Configuration (strategy_config) ---
strategy_config:
  agent_config:
    learning_rate: 0.0001
    gamma: 0.99
    lambda_gae: 0.95
    ppo_epsilon: 0.2
    ppo_epochs: 12  # Increased from 8
    batch_size: 256 # Increased from 128
    entropy_coef: 0.01
    value_loss_coef: 0.5
    max_grad_norm: 0.5
    advantage_normalization: true
    reward_scaling: true
    use_gae: true
    
  risk_management:
    max_position_size: 0.5  # Reduced from 1.0 for better risk control
    max_leverage: 20       # Reduced from 30
    max_drawdown: 0.015    # Reduced from 0.02
    position_sizing_method: 'adaptive_kelly'  # Enhanced position sizing
    risk_per_trade: 0.005  # Reduced from 0.01
    use_dynamic_stops: true
    trailing_stop: true
    stop_loss_atr_multiplier: 2.5
    take_profit_atr_multiplier: 5.0
    max_correlation: 0.7   # New: limit correlated positions
    var_limit: 0.02       # New: Value at Risk limit
    es_limit: 0.03        # New: Expected Shortfall limit
    max_positions_per_regime: 3  # New: regime-based position limits
    adaptive_timeframe: true    # New: adapt to market conditions
    
  execution:
    use_limit_orders: true
    slippage_model: 'adaptive_ml'  # Enhanced slippage modeling
    transaction_costs: true
    min_trade_interval: 10   # Increased from 5
    max_positions_per_symbol: 2
    use_iceberg_orders: true
    order_execution_timeout: 45  # Increased from 30
    smart_order_routing: true   # New: intelligent order routing
    liquidity_threshold: 0.8    # New: minimum required liquidity
    
  filters:
    min_volatility: 0.0001
    max_spread: 0.0002    # Reduced from 0.0003
    min_volume: 200       # Increased from 100
    trend_filter: true
    volatility_filter: true
    regime_filter: true
    liquidity_filter: true
    correlation_filter: true    # New
    market_impact_filter: true  # New
    regime_transition_filter: true  # New
    
  monitoring:
    log_level: 'INFO'
    save_trades: true
    performance_metrics: [
      'sharpe', 'sortino', 'calmar', 'omega',
      'max_drawdown', 'win_rate', 'profit_factor',
      'expectancy', 'tail_ratio', 'var_95', 'cvar_95',
      'regime_accuracy', 'position_quality',  # New metrics
      'execution_efficiency', 'risk_adjusted_return',
      'regime_transition_score', 'adaptive_sharpe'
    ]
    risk_metrics: [
      'var', 'cvar', 'omega_ratio',
      'sortino_ratio', 'tail_ratio',
      'max_drawdown_duration', 'ulcer_index',
      'conditional_drawdown', 'extreme_deviation',  # New metrics
      'correlation_risk', 'concentration_risk',
      'regime_risk', 'liquidity_risk'
    ]
    regime_metrics: [
      'trend_strength', 'volatility_regime',
      'liquidity_score', 'market_impact',
      'regime_stability', 'regime_transition',  # New metrics
      'market_efficiency', 'market_quality',
      'microstructure_score', 'adaptive_regime'
    ]
    alert_thresholds:  # New: Advanced alerting system
      drawdown_alert: 0.01
      var_breach: 0.015
      correlation_warning: 0.65
      regime_change_alert: true
      liquidity_warning: 0.7
      execution_quality_alert: 0.8

# --- Portfolio Capital Management Configuration (portfolio_capital_config) ---
portfolio_capital_config:
  initial_capital: 5000.0 # Initial capital for simulation/live trading
  max_total_risk_pct: 0.05 # Max % of total capital at risk across all open positions (e.g., 0.05 = 5%)
  max_allocation_per_trade_pct: 0.02 # Max % of capital to risk on a single new trade (e.g., 0.02 = 2%)
  allocation_method: 'confidence_weighted' # Options: 'equal_weight', 'confidence_weighted', 'kelly'
  kelly_fraction: 0.5 # Parameter for Kelly criterion if used
  min_position_notional: 100 # Minimum required notional value for a trade (in account currency)

# --- Simulator Configuration (simulator_config) ---
# Used only when mode = 'simulation'
simulator_config:
  commission_pct: 0.00005 # Broker commission per trade value (e.g., 0.00005 = 0.005%)
  slippage_pct: 0.0001 # Simulated slippage per trade value (e.g., 0.0001 = 0.01%)
  update_agent_every: 256 # How many simulation steps between PPO updates
  print_every: 500 # How often to print simulation status
  plot_results: true # Whether to generate a plot at the end of simulation

# --- Live Trading Configuration (live_config) ---
# Used only when mode = 'live'
live_config:
  loop_interval_sec: 5 # Interval between main trading loop iterations
  delay_after_close_ms: 500 # Small delay after closing a position

# --- Logging Configuration (logging_config) ---
logging_config:
  log_level: 'INFO' # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  log_file: 'results/genovo_traderv2.log' # Path to the log file (updated name slightly)
